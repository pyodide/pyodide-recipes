name: Build Recipes

on:
  push:
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

env:
  # Increase this value to reset cache if environment.yml has not changed
  CONDA_CACHE_NUMBER: 0

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache conda
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CONDA_CACHE_NUMBER }}-${{
            hashFiles('environment.yml') }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: pyodide-env
          environment-file: environment.yml
          channels: conda-forge

      - name: Install latest pyodide-build and build dependencies
        shell: bash -l {0}
        run : |
          which python
          python -m pip install git+https://github.com/pyodide/pyodide.git@main#subdirectory=pyodide-build
          pyodide xbuildenv install --download --url http://pyodide-cache.s3-website-us-east-1.amazonaws.com/xbuildenv/dev/xbuildenv.tar.bz2

      - name: Check emscripten version
        shell: bash -l {0}
        run: |
          echo EMSCRIPTEN_VERSION=$(pyodide config get emscripten_version) >> $GITHUB_ENV

      - uses: mymindstorm/setup-emsdk@v11
        with:
          version: ${{ env.EMSCRIPTEN_VERSION }}

      - name: Calculate recipes to build (pull_request)
        if: github.event_name == 'pull_request'
        id: calculate_recipes_pr
        shell: bash -l {0}
        run: |
          export CHANGED_RECIPES=$(python ./tools/calc_diff.py \
            --base origin/${{ github.base_ref }} \
            --target ${{ github.head_ref }})

          # If there are no changed recipes, we build only core packages sets
          if [ -z "$CHANGED_RECIPES" ]; then
            echo "recipes=tag:core" >> "$GITHUB_OUTPUT"
          else
            echo "recipes=$CHANGED_RECIPES,tag:core" >> "$GITHUB_OUTPUT"
          fi

      - name: Build recipes (full)
        shell: bash -l {0}
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[full build]') }}
        run: |
          pyodide build-recipes "*" --install --install-dir=./repodata

      - name: Build recipes (changed only)
        shell: bash -l {0}
        if: github.event_name == 'pull_request' && !contains(github.event.head_commit.message, '[full build]')
        run: |
          pyodide build-recipes ${{ steps.calculate_recipes_pr.outputs.recipes }} --install --install-dir=./repodata

      - name: Store artifacts build
        uses: actions/upload-artifact@v2
        with:
          name: repodata
          path: ./repodata/
          retention-days: 15

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ./repodata/*.whl

  test:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        test-config: [
          {runner: selenium, runtime: chrome, runtime-version: latest },
        ]

    steps:
      - uses: actions/checkout@v3

      - name: Cache conda
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CONDA_CACHE_NUMBER }}-${{
            hashFiles('environment.yml') }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: pyodide-env
          environment-file: environment.yml
          channels: conda-forge

      - name: Download latest Pyodide
        shell: bash -l {0}
        run: |
          wget http://pyodide-cache.s3-website-us-east-1.amazonaws.com/xbuildenv/dev/pyodide-core.tar.bz2
          tar -xvf pyodide-core.tar.bz2
          mv pyodide dist

      - uses: pyodide/pyodide-actions/install-browser@v1
        with:
          runner: ${{ matrix.test-config.runner }}
          browser: ${{ matrix.test-config.runtime }}
          browser-version: ${{ matrix.test-config.runtime-version }}

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: repodata
          path: ./repodata/

      - name: Copy repodata
        run: |
          cp ./repodata/* ./dist/

      - name: Run tests
        shell: bash -l {0}
        run: |
          # FIXME: skip webworker tests
          pytest -v \
            --dist-dir=./dist/ \
            --runner=${{ matrix.test-config.runner }} \
            --rt ${{ matrix.test-config.runtime }} \
            -k "not webworker" \
            packages
